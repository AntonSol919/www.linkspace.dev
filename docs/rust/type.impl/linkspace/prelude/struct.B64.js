(function() {var type_impls = {
"linkspace":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.into_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.into_bytes\" class=\"fn\">into_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">{ _ }</a>]</h4></section><section id=\"method.inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.inner\" class=\"fn\">inner</a>(self) -&gt; N</h4></section><section id=\"method.from_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.from_ref\" class=\"fn\">from_ref</a>(b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;N</a>) -&gt; &amp;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h4></section></div></details>",0,"linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.b64\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.b64\" class=\"fn\">b64</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.b64_mini\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.b64_mini\" class=\"fn\">b64_mini</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.b64_into\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.b64_into\" class=\"fn\">b64_into</a>(&amp;self, output_buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>)</h4></section></div></details>",0,"linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-B64%3C%5Bu8;+N%5D%3E\" class=\"impl\"><a href=\"#impl-B64%3C%5Bu8;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.try_fit_bytes_or_b64\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.try_fit_bytes_or_b64\" class=\"fn\">try_fit_bytes_or_b64</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt;, DecodeError&gt;</h4></section><section id=\"method.try_fit_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.try_fit_slice\" class=\"fn\">try_fit_slice</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt;, FitSliceErr&gt;</h4></section><section id=\"method.parse_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.parse_str\" class=\"fn\">parse_str</a>(st: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt;, DecodeError&gt;</h4></section></div></details>",0,"linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-B64\" class=\"impl\"><a href=\"#impl-B64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_u256\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.to_u256\" class=\"fn\">to_u256</a>(self) -&gt; Uint&lt;256, 4&gt;</h4></section><section id=\"method.from_u256\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"linkspace/prelude/struct.B64.html#tymethod.from_u256\" class=\"fn\">from_u256</a>(value: Uint&lt;256, 4&gt;) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section></div></details>",0,"linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, N&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.188/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ABEValidator-for-B64%3C%5Bu8;+L%5D%3E\" class=\"impl\"><a href=\"#impl-ABEValidator-for-B64%3C%5Bu8;+L%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; ABEValidator for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.check\" class=\"method trait-impl\"><a href=\"#method.check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check</a>(b: &amp;[ABE]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, MatchError&gt;</h4></section></div></details>","ABEValidator","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<section id=\"impl-StructuralEq-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-StructuralEq-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section>","StructuralEq","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Clone-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Default-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialOrd-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Deref-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = N</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Hash-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<span class=\"where fmt-newline\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Debug-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-B64%3C%5Bu8;+L%5D%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-B64%3C%5Bu8;+L%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = FitSliceErr</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt;, &lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CABList%3E-for-B64%3C%5Bu8;+L%5D%3E\" class=\"impl\"><a href=\"#impl-TryFrom%3CABList%3E-for-B64%3C%5Bu8;+L%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;ABList&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = DecodeError</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: ABList\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt;, &lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">L</a>]&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;ABList&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<ABList>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<section id=\"impl-Pod-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Pod-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; Pod for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: Pod,</span></h3></section>","Pod","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Display-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<section id=\"impl-Eq-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Eq-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToABE-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-ToABE-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; ToABE for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.write_abe\" class=\"method trait-impl\"><a href=\"#method.write_abe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_abe</a>(&amp;self, out: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(ABE))</h4></section><section id=\"method.to_abe_str\" class=\"method trait-impl\"><a href=\"#method.to_abe_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_abe_str</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.to_abe\" class=\"method trait-impl\"><a href=\"#method.to_abe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_abe</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;ABE&gt;</h4></section></div></details>","ToABE","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Zeroable-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; Zeroable for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: Zeroable,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/nightly/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<section id=\"impl-StructuralPartialEq-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section>","StructuralPartialEq","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CN%3E-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CN%3E-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;N&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;N</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<N>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-B64%3C%5Bu8;+N%5D%3E\" class=\"impl\"><a href=\"#impl-FromStr-for-B64%3C%5Bu8;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = DecodeError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt;, &lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>]&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<section id=\"impl-Copy-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Copy-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section>","Copy","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-B64\" class=\"impl\"><a href=\"#impl-BitXor-for-B64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>) -&gt; &lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Ord-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3C256,+4%3E%3E-for-B64\" class=\"impl\"><a href=\"#impl-From%3CUint%3C256,+4%3E%3E-for-B64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Uint&lt;256, 4&gt;&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: Uint&lt;256, 4&gt;) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Uint<256, 4>>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CN%3E-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-From%3CN%3E-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;N&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: N) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<N>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-DerefMut-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut &lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CN%3E-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Borrow%3CN%3E-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;N&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;N</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<N>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-B64%3CN%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-B64%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&lt;N&gt;<span class=\"where fmt-newline\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UInt-for-B64\" class=\"impl\"><a href=\"#impl-UInt-for-B64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl UInt for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN</a>: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a> = _</h4></section><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX</a>: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a> = _</h4></section><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ONE</a>: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a> = _</h4></section><section id=\"associatedconstant.BITS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = 256u32</h4></section><section id=\"method.bit_and\" class=\"method trait-impl\"><a href=\"#method.bit_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_and</a>(self, other: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section><section id=\"method.bit_or\" class=\"method trait-impl\"><a href=\"#method.bit_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_or</a>(self, other: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section><section id=\"method.not\" class=\"method trait-impl\"><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section><section id=\"method.inc\" class=\"method trait-impl\"><a href=\"#method.inc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inc</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&gt;</h4></section><section id=\"method.decr\" class=\"method trait-impl\"><a href=\"#method.decr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decr</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&gt;</h4></section><section id=\"method.checked_sub\" class=\"method trait-impl\"><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_sub</a>(self, other: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&gt;</h4></section><section id=\"method.checked_add\" class=\"method trait-impl\"><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">checked_add</a>(self, other: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>&gt;</h4></section><section id=\"method.overflowing_shl\" class=\"method trait-impl\"><a href=\"#method.overflowing_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.overflowing_shr\" class=\"method trait-impl\"><a href=\"#method.overflowing_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">leading_zeros</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">trailing_zeros</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">trailing_ones</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.leading_ones\" class=\"method trait-impl\"><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">leading_ones</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>) -&gt; (<a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.as_be_bytes\" class=\"method trait-impl\"><a href=\"#method.as_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_be_bytes</a>(&amp;self, out: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]))</h4></section><section id=\"method.to_be_vec\" class=\"method trait-impl\"><a href=\"#method.to_be_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_be_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></div></details>","UInt","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNetPktHeader%3E-for-B64\" class=\"impl\"><a href=\"#impl-From%3CNetPktHeader%3E-for-B64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"linkspace/prelude/struct.NetPktHeader.html\" title=\"struct linkspace::prelude::NetPktHeader\">NetPktHeader</a>&gt; for <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"linkspace/prelude/struct.NetPktHeader.html\" title=\"struct linkspace::prelude::NetPktHeader\">NetPktHeader</a>) -&gt; <a class=\"struct\" href=\"linkspace/prelude/struct.B64.html\" title=\"struct linkspace::prelude::B64\">B64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NetPktHeader>","linkspace::prelude::GroupID","linkspace::prelude::LkHash","linkspace::prelude::PubKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()